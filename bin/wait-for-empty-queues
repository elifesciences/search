#!/usr/bin/env bash
set -e

# with just a single worker the polling may fail often as there is a gap between accepting and completing a job.
# with more workers this becomes less unlikely.
no_workers_threshold=15 # how many attempts per-loop should be made to detect workers? 10 is safe, 15 is safer.
no_workers_attempt=0 # which attempt are we on now?

while true; do
    # `|| true` avoid failing the script when there are no results
    workers=$(pgrep -cf gearman:worker || true)
    watches=$(pgrep -cf queue:watch || true)

    if [ "$workers" -eq "0" ]; then
        if [ "$no_workers_attempt" = "$no_workers_threshold" ]; then
            echo "No alive gearman:worker processes"
            break
        fi
        no_workers_attempt=$((no_workers_attempt+1))
        sleep .10 # ten checks in a second
        continue
    fi
    no_workers_attempt=0 # we've found a worker, reset the counter

    if [ "$watches" -eq "0" ]; then
        echo "No alive queue:watch processes"
        break
    fi
    sqs_queue=$(bin/console queue:count)
    echo "Job in SQS queue (approximate): $sqs_queue"
    gearman_queue=$(gearadmin --status | cut -f 2 | paste -sd+ | bc)
    echo "Job in Gearman queue: $gearman_queue"
    if [ "$sqs_queue" -eq 0 ] && [ "$gearman_queue" -eq "0" ]; then
        echo "No more jobs, finished waiting"
        exit 0
    fi
    sleep 1
done

echo "Failing"
exit 2
