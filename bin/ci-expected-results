#!/bin/bash
# final verification
# we start from an empty index
set -e

actual_total=$(curl --no-progress-meter localhost/search | jq ".total")
if [ ! "$actual_total" ]; then
    actual_total=-1
fi
echo "Total results in the index: $actual_total"
gateway_total=$(bin/console gateway:total)
gateway_search_rp=$(curl --no-progress-meter "${GATEWAY_HOST:-"localhost:8080"}/search?per-page=1&type[]=reviewed-preprint" | jq ".total")
gateway_rp=$(curl --no-progress-meter "${GATEWAY_HOST:-"localhost:8080"}/reviewed-preprints" | jq ".total")
# Expected total must offset reviewed-preprints which are also in article store
expected_total=$((gateway_total + gateway_search_rp - gateway_rp))
if [ ! "$actual_total" -eq "$expected_total" ]; then
    echo "There should be exactly $expected_total results in the index"
    for t in article blog-article collection interview labs-post podcast-episode reviewed-preprint
    do
        if [ "$t" = "article" ]; then
            t="research-article&type[]=correction&type[]=insight&type[]=tools-resources"
        fi

        if [ "$t" = "podcast-episode" ]; then
            id_field=".number"
        else
            id_field=".id"
        fi
        expected_t=$(curl --no-progress-meter "${GATEWAY_HOST:-"localhost:8080"}/search?per-page=100&type[]=${t}" | jq ".items[] | ${id_field}" | sed 's/\"//g' | sort | awk 'ORS=","' | head -c -1)
        actual_t=$(curl --no-progress-meter "localhost/search?per-page=100&type[]=${t}" | jq ".items[] | ${id_field}" | sed 's/\"//g' | sort | awk 'ORS=","' | head -c -1)
        if [ "$actual_t" != "$expected_t" ]; then
            echo "${t} expected: \"${expected_t}\", actual: \"${actual_t}\""
        fi
    done
    if [ "$actual_total" -gt "$expected_total" ]; then
        echo "(have more test fixtures been added to api-dummy and/or api-sdk updated?)"
    fi
    exit 2
fi

echo "CHECK: Search for article id"
actual_first_id=$(curl --no-progress-meter "localhost/search?for=04395&page=1&per-page=10&sort=relevance&order=desc&use-date=default" | jq ".items[0].id")
expected_first_id='"04395"'
if [ "$actual_first_id" != "$expected_first_id" ]; then
    echo "When searching for an article id, it should appear as the first result"
    echo "Expected first id $expected_first_id, actual id $actual_first_id"
    exit 2
fi

echo "CHECK: Search for article title"
actual_first_title=$(curl --no-progress-meter "localhost/search?for=Updates%20to%20the%20zoonotic%20niche%20map%20of%20Ebola%20virus%20disease%20in%20Africa&page=1&per-page=10&sort=relevance&order=desc&use-date=default" | jq ".items[0].title")
expected_first_title='"Updates to the zoonotic niche map of Ebola virus disease in Africa"'
if [ "$actual_first_title" != "$expected_first_title" ]; then
    echo "When searching for an article title, it should appear as the first result"
    echo "Expected first title $expected_first_title, actual title $actual_first_title"
    exit 2
fi

echo "CHECK: Search for lead author"
actual_author_line=$(curl --no-progress-meter "localhost/search?for=David%20Rasmussen&page=1&per-page=10&sort=relevance&order=desc&use-date=default" | jq ".items[0].authorLine")
expected_author_line='"David A Rasmussen, Tanja Stadler"'
if [ "$actual_author_line" != "$expected_author_line" ]; then
    echo "When searching for a lead author, their paper should appear as the first result"
    echo "Expected authorLine $expected_author_line, actual authorLine $actual_author_line"
    exit 2
fi

echo "CHECK: Search for author not in authorLine"
actual_author_non_authorline_title=$(curl --no-progress-meter "localhost/search?for=Passarelli&page=1&per-page=10&sort=relevance&order=desc&use-date=default" | jq ".items[0].title")
expected_author_non_authorline_title='"The genome sequence of the colonial chordate, <i>Botryllus schlosseri</i>"'
if [ "$actual_author_non_authorline_title" != "$expected_author_non_authorline_title" ]; then
    echo "When searching for an author that doesn't appear in the authorLine, their paper should appear as the first result"
    echo "Expected title $expected_author_non_authorline_title, actual title $actual_author_non_authorline_title"
    exit 2
fi

total_with_reserved_chars=$(curl --no-progress-meter "localhost/search?for=rheumatoid%20arthritis%20(RA)&page=1&per-page=10&sort=relevance&order=desc&use-date=default" | jq ".total")
if [ -z "$total_with_reserved_chars" ]; then
    total_with_reserved_chars=-1
fi
echo "CHECK: Search with reserved character"
if [ "$total_with_reserved_chars" -lt 0 ]; then
    echo "We should be able to handle reserved characters"
    exit 2
fi

echo "WIP CHECK: Search by elifeAssessment significance"
results=$(curl --no-progress-meter "localhost/search?per-page=100&elifeAssessmentSignificance[]=important" | jq ".total")
echo $results

echo "CHECK: List of reviewed preprints by date desc default"
actual_reviewed_preprint_title=$(curl --no-progress-meter "localhost/search?type[]=reviewed-preprint&order=desc&sort=date&per-page=100" | jq ".items[0].title")
expected_reviewed_preprint_title=$(curl --no-progress-meter "api-dummy:8080/search?type[]=reviewed-preprint&order=desc&sort=date&per-page=100" | jq ".items[0].title")
if [ "$actual_reviewed_preprint_title" != "$expected_reviewed_preprint_title" ]; then
    echo "When listing all reviewed-preprints by default date desc the most recently updated preprint should be the first result"
    echo "Expected title $expected_reviewed_preprint_title, actual title $actual_reviewed_preprint_title"
    exit 2
fi

echo "CHECK: List of reviewed preprints by date desc published"
actual_reviewed_preprint_title=$(curl --no-progress-meter "localhost/search?type[]=reviewed-preprint&order=desc&sort=date&use-date=published&per-page=100" | jq ".items[0].title")
expected_reviewed_preprint_title=$(curl --no-progress-meter "api-dummy:8080/search?type[]=reviewed-preprint&order=desc&sort=date&use-date=published&per-page=100" | jq ".items[0].title")
if [ "$actual_reviewed_preprint_title" != "$expected_reviewed_preprint_title" ]; then
    echo "When listing all reviewed-preprints by published date desc the most recently published preprint should be the first result"
    echo "Expected title $expected_reviewed_preprint_title, actual title $actual_reviewed_preprint_title"
    exit 2
fi


echo "CHECK: Search query ignores hyphen(-)"
actual_search_result_title=$(curl --no-progress-meter "localhost/search?for=Dehaene-Lambertz" | jq ".items[0].title")
expected_search_result_title='"Humans parsimoniously represent auditory sequences by pruning and completing the underlying network structure"'
if [ "$actual_search_result_title" != "$expected_search_result_title" ]; then
    echo "When search query has -, it should ignore it"
    echo "Expected title $expected_search_result_title, actual title $actual_search_result_title"
    exit 2
fi



echo "CHECK: Search results validate against schema"
bin/console search:valid

echo "Success!"
